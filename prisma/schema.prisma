generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id                 String             @id @default(uuid())
  hubId              Int                @unique @map("hub_id")
  parcelForwardingId String             @map("parcel_forwarding_id")
  firstName          String             @map("first_name")
  lastName           String             @map("last_name")
  email              String             @unique
  password           String
  createdAt          DateTime           @default(now()) @map("created_at")
  CheckIn            CheckIn[]
  Package            Package[]
  ShippingAddress    ShippingAddress[]
  DeclarationModel   DeclarationModel[]

  parcel_forwarding ParcelForwarding @relation(fields: [parcelForwardingId], references: [id])

  @@map("customers")
}

model ParcelForwarding {
  id       String     @id @default(uuid())
  name     String
  initials String
  email    String     @unique
  password String
  CheckIn  CheckIn[]
  Customer Customer[]
  Package  Package[]

  @@map("parcel_forwarding")
}

model CheckIn {
  id                 String    @id @default(uuid())
  status             Int
  details            String
  weight             Int
  parcelForwardingId String    @map("parcel_forwarding_id")
  packageId          String?   @map("package_id")
  customerId         String    @map("customer_id")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime? @updatedAt @map("updated_at")

  parcel_forwarding ParcelForwarding    @relation(fields: [parcelForwardingId], references: [id])
  customer          Customer            @relation(fields: [customerId], references: [id])
  Package           Package?            @relation(fields: [packageId], references: [id])
  CheckInAttachment CheckInAttachment[]

  @@map("check_ins")
}

model Attachment {
  id                String              @id @default(uuid())
  url               String
  createdAt         DateTime            @default(now()) @map("created_at")
  CheckInAttachment CheckInAttachment[]

  @@map("attachments")
}

model CheckInAttachment {
  id           String   @id @default(uuid())
  checkInId    String   @map("check_in_id")
  attachmentId String   @map("attachment_id")
  createdAt    DateTime @map("created_at")

  CheckIn    CheckIn    @relation(fields: [checkInId], references: [id])
  Attachment Attachment @relation(fields: [attachmentId], references: [id])

  @@map("check_in_attachments")
}

model Package {
  id                       String    @id @default(uuid())
  customerId               String    @map("customer_id")
  parcelForwardingId       String    @map("parcel_forwarding_id")
  packageShippingAddressId String    @map("package_shipping_addresses_id")
  weight                   Int?
  hasBattery               Boolean   @map("has_battery")
  trackingNumber           String?   @map("tracking_number")
  createdAt                DateTime  @default(now()) @map("created_at")
  updatedAt                DateTime? @updatedAt @map("updated_at")

  CheckIn CheckIn[]

  parcel_forwarding      ParcelForwarding        @relation(fields: [parcelForwardingId], references: [id])
  customer               Customer                @relation(fields: [customerId], references: [id])
  CustomDeclarationItems CustomDeclarationItem[]
  PackageShippingAddress PackageShippingAddress  @relation(fields: [packageShippingAddressId], references: [id])

  @@map("packages")
}

model ShippingAddress {
  id            String    @id @default(uuid())
  customerId    String    @map("customer_id")
  recipientName String    @map("recipient_name")
  taxId         String?   @map("tax_id")
  email         String?
  phoneNumber   String?   @map("phone_number")
  address       String    @map("address")
  complement    String?   @map("complement")
  city          String    @map("city")
  state         String    @map("state")
  zipcode       String    @map("zipcode")
  country       String    @map("country")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime? @updatedAt @map("updated_at")

  customer Customer @relation(fields: [customerId], references: [id])

  @@map("shipping_addresses")
}

model PackageShippingAddress {
  id            String    @id @default(uuid())
  recipientName String    @map("recipient_name")
  taxId         String?   @map("tax_id")
  email         String?
  phoneNumber   String?   @map("phone_number")
  address       String    @map("address")
  complement    String?   @map("complement")
  city          String    @map("city")
  state         String    @map("state")
  zipcode       String    @map("zipcode")
  country       String    @map("country")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime? @updatedAt @map("updated_at")
  Package       Package[]

  @@map("package_shipping_addresses")
}

model DeclarationModel {
  id         String    @id @default(uuid())
  customerId String    @map("customer_id")
  title      String    @map("title")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime? @updatedAt @map("updated_at")

  Customer              Customer?              @relation(fields: [customerId], references: [id])
  DeclarationModelItems DeclarationModelItem[]

  @@map("declaration_models")
}

model DeclarationModelItem {
  id                 String    @id @default(uuid())
  declarationModelId String    @map("declaration_model_id")
  description        String    @map("description")
  value              Int       @map("value")
  quantity           Int       @map("quantity")
  createdAt          DateTime  @map("created_at")
  updatedAt          DateTime? @updatedAt @map("updated_at")

  DeclarationModel DeclarationModel @relation(fields: [declarationModelId], references: [id])

  @@map("declaration_model_items")
}

model CustomDeclarationItem {
  id          String    @id @default(uuid())
  description String    @map("description")
  value       Int       @map("value")
  quantity    Int       @map("quantity")
  packageId   String    @map("package_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")

  Package Package @relation(fields: [packageId], references: [id])

  @@map("custom_declaration_items")
}
