version: '3.8'

services:
  postgres:
    container_name: hub-postgres
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: hub-postgres-db
    volumes:
      - ./data/pg:/data/postgres
    networks:
      - hubdash-network
  
  prisma:
    container_name: hub-prisma
    environment:
      - DATABASE_URL=postgresql://postgres:docker@postgres:5432/hub-postgres-db
    build:
      context: .
    depends_on:
      - postgres
    networks:
      - hubdash-network
    command: ["npx", "prisma", "migrate", "deploy"]
  
  hub-api:
    container_name: hub-api
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_PRIVATE_KEY=${JWT_PRIVATE_KEY}
      - JWT_PUBLIC_KEY=${JWT_PUBLIC_KEY}
      - CLOUDFLARE_DEV_URL=${CLOUDFLARE_DEV_URL}
      - CLOUDFLARE_ACCOUNT_ID=${CLOUDFLARE_ACCOUNT_ID}
      - TOKEN_VALUE=${TOKEN_VALUE}
      - CLOUDFLARE_BUCKET_NAME=${CLOUDFLARE_BUCKET_NAME}
      - CLOUDFLARE_ACCESS_KEY_ID=${CLOUDFLARE_ACCESS_KEY_ID}
      - CLOUDFLARE_SECRET_ACCESS_KEY=${CLOUDFLARE_SECRET_ACCESS_KEY}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=${SMTP_SECURE}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - DOMAIN_NAME=${DOMAIN_NAME}
    build:
      context: .
    ports:
      - 3333:3333
    depends_on:
      - prisma
    networks:
      - hubdash-network
    env_file:
      - .env

networks:
  hubdash-network:
    driver: bridge

volumes:
  db: